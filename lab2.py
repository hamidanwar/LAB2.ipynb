# -*- coding: utf-8 -*-
"""LAB2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CeG2_0lBj-JFj9lwLTpNbczGpbbhEO1v
"""



"""## **Task 1: Lists**"""

# Integers List Created
integers_list = [12, 7, -3, 56, 0, 21, -9, 34, 8, -15]
print(integers_list)

integers_list = [12, 7, -3, 56, 0, 21, -9, 34, 8, -15]

# Calculating sum, max, and min
sum_of_integers = sum(integers_list)
max_value = max(integers_list)
min_value = min(integers_list)

# Printing individually
print("Sum:", sum_of_integers)
print("Max:", max_value)
print("Min:", min_value)

# Initial list
integers_list = [12, 7, -3, 56, 0, 21, -9, 34, 8, -15]

# 1. Add a new element (e.g., 99) to the list
integers_list.append(99)
print("After adding 99:", integers_list)

# 2. Remove an existing element (e.g., remove -9)
integers_list.remove(-9)
print("After removing -9:", integers_list)

# 3. Append the list to another list (e.g., adding a second list)
new_list = [100, -50, 23]
integers_list.extend(new_list)
print("After appending another list:", integers_list)

integers_list = [12, 7, -3, 56, 0, 21, 34, 8, -15, 99, 100, -50, 23]

# Sort in ascending order
integers_list.sort()
print("Ascending order:", integers_list)

# Sort in descending order
integers_list.sort(reverse=True)
print("Descending order:", integers_list)

"""# **Task 2: Tuples**"""

# Creating a tuple with 5 string elements (names)
my_tuple = ("Liam", "Emma", "Noah", "Olivia", "Ava")

# Printing the second element (index 1)
print("Second element:", my_tuple[1])  # Emma

# Printing the last element (index -1)
print("Last element:", my_tuple[-1])   # Ava

# Creating a tuple with 5 string elements
my_tuple = ("Liam", "Emma", "Noah", "Olivia", "Ava")

# Trying to modify the second element (index 1)
my_tuple[1] = "Sophia"  # This will raise a TypeError

"""# **Task 3: Sets**"""

# Creating two sets
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

# Sum of elements in each set
sum_set1 = sum(set1)
sum_set2 = sum(set2)

# Common elements (intersection)
common_elements = set1.intersection(set2)

# Unique elements (symmetric difference: elements in either set but not both)
unique_elements = set1.symmetric_difference(set2)

# Printing the results
print("Set 1:", set1)
print("Set 2:", set2)
print("Sum of Set 1:", sum_set1)
print("Sum of Set 2:", sum_set2)
print("Common elements:", common_elements)
print("Unique elements:", unique_elements)



"""# **Task 4: Dictionary**"""

#create a dictionary of Friends and their marks
Friend_marks = {
    'Mudassir': 98,
    'Imran': 92,
    'Hammad': 78,
    'Hanif': 95,
    'Hamid': 88
}

#print the dictionary
print('key',Friend_marks.keys())
print('Values',Friend_marks.values())

#update value
Friend_marks['Hamid']=85
print(Friend_marks)

"""# **Task 5: Numpy**

# **Task 6: Matpolitons**
"""